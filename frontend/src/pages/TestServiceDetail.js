import "bootstrap/dist/css/bootstrap.min.css";
import React, { useState } from "react";
import { Badge, Card, Carousel, Col, Container, ProgressBar, Row } from "react-bootstrap";
import { Link } from "react-router-dom";
import images from "../assets/images/pages.jpg";

const serviceData = {
    name: "Du thuy·ªÅn Indochine",
    rating: 5.0,
    reviews: 4,
    location: "S·ªë 22, B·∫øn 2, C·∫£ng Tu·∫ßn Ch√¢u, H·∫° Long, Qu·∫£ng Ninh, Vi·ªát Nam",
    price: "4,125,000 ƒë/kh√°ch",
    images: [
        "https://source.unsplash.com/800x400/?halongbay",
        "https://source.unsplash.com/800x400/?cruise",
        "https://source.unsplash.com/800x400/?restaurant",
        "https://source.unsplash.com/800x400/?ship",
    ],
    highlights: [
        "Bao g·ªìm t·∫•t c·∫£ c√°c b·ªØa ƒÉn",
        "Gi√°p bi·ªÉn",
        "Qu·∫ßy bar",
        "L·ªÖ t√¢n 24 gi·ªù",
        "Nh√† h√†ng",
    ],
    details: [
        "L√† m·ªôt trong nh·ªØng du thuy·ªÅn 5 sao m·ªõi v√† sang tr·ªçng nh·∫•t cho kh√°ch tham quan V·ªãnh Lan H·∫°.",
        "Du thuy·ªÅn Indochine ƒë∆∞·ª£c trang b·ªã hai nh√† h√†ng, qu·∫ßy bar, sundeck r·ªông r√£i v√† cabin sang tr·ªçng.",
        "T·∫•t c·∫£ c√°c cabins ƒë∆∞·ª£c thi·∫øt k·∫ø v√† ph√π h·ª£p v·ªõi ti√™u chu·∫©n qu·ªëc t·∫ø, l√†m n·ªïi b·∫≠t trang tr√≠ b·∫±ng g·ªó, v·ªõi c·ª≠a s·ªï l·ªõn.",
        "Qu·∫ßy bar tr√™n du thuy·ªÅn cung c·∫•p c√°c lo·∫°i r∆∞·ª£u khai v·ªã, r∆∞·ª£u m·∫°nh, cocktail, bia v√† c√°c lo·∫°i r∆∞·ª£u vang h·∫£o h·∫°ng ƒë∆∞·ª£c tuy·ªÉn ch·ªçn t·ª´ kh·∫Øp n∆°i tr√™n th·∫ø gi·ªõi."
    ],
    shipInfo: {
        launchYear: 2019,
        cabins: 43,
        hull: "Kim lo·∫°i",
        itinerary: "V·ªãnh Lan H·∫° - L√†ng ch√†i Vi·ªát H·∫£i - Hang S√°ng T·ªëi",
        operator: "T·∫≠p ƒëo√†n du l·ªãch H∆∞·ªõng H·∫£i",
    },
    reviewsData: {
        averageRating: 5.0,
        totalReviews: 4,
        starRatings: [0, 0, 0, 0, 4],
        reviews: [
            {
                name: "Nguyen Truc Quynh",
                date: "09/05/2024",
                rating: 5,
                comment: "D·ªãch v·ª• t·ªët, ƒë·ªì ƒÉn ngon. M√¨nh r·∫•t h√†i l√≤ng, s·∫Ω c√≤n quay l·∫°i tr·∫£i nghi·ªám c√°c du thuy·ªÅn kh√°c n·ªØa c·ªßa Mixi Vivu."
            }
        ]
    }
};

const styles = {
    titlecontainer: {
        display: "flex",
        alignItems: "flex-start",
        maxWidth: "100%",
        textAlign: "left",
    },
    titleheading: {
        fontSize: "32px",
        fontWeight: "bold",
    },
    feedback: {
        borderBottom: "1px solid #ccc",
    },
    titleFeedback: {
        display: "flex",
        alignItems: "flex-start",
        justifyContent: "space-between",
        maxWidth: "100%",
    },
    formFeedback: {
        display: "flex",
        flexDirection: "column",
        gap: "24px",
    },
    ratingContainer: {
        borderRadius: "20px",
        boxShadow: "0px 4px 10px rgba(0, 0, 0, 0.1)",
    },
    ratingCardBody: {
        display: "flex",
        alignItems: "center",
        justifyContent: "space-between",
        gap: "48px",
    },
    reviewCard: {
        borderRadius: "20px",
        boxShadow: "0px 4px 10px rgba(0, 0, 0, 0.1)",
    },
    reviewCardBody: {
        padding: "16px",
    }
}

const TestServiceDetail = () => {
    const [review, setReview] = useState({ name: "", email: "", phone: "", rating: 0, comment: "" });

    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setReview({ ...review, [name]: value });
    };


    return (
        <Container className="mt-4">
            <Row className="align-items-center">
                <Col md={8}>
                    <h2 className="fw-bold">{serviceData.name}</h2>
                    <div style={styles.titlecontainer}>
                        <Badge bg="warning-subtle" text="dark">
                            ‚≠ê {serviceData.rating} ({serviceData.reviews} ƒë√°nh gi√°)
                        </Badge>
                        <Badge className="ms-2" bg="info-subtle" text="dark">
                            üìç {serviceData.location} | <Link>Xem b·∫£n ƒë·ªì v√† l·ªãch tr√¨nh</Link>
                        </Badge>
                    </div>
                    <img
                        src={images}
                        alt="Kh√°m ph√° d·ªãch v·ª• kh√°ch s·∫°n"
                        style={{ maxWidth: "100%", height: "auto" }}
                    />
                </Col>
                <Col md={4} className="text-end">
                    <h3 className="fw-bold text-success">{serviceData.price}</h3>
                </Col>
            </Row>
            <Row className="mt-3">
                <Col>
                    <Carousel>
                        {serviceData.images.map((image, index) => (
                            <Carousel.Item key={index}>
                                <img
                                    className="d-block w-100 rounded"
                                    src={image}
                                    alt={`Slide ${index + 1}`}
                                />
                            </Carousel.Item>
                        ))}
                    </Carousel>
                </Col>
            </Row>
            <Row className="mt-4">
                <Col md={8}>
                    <h3 className="fw-bold">ƒê·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t</h3>
                    <img
                        src={images}
                        alt="Kh√°m ph√° d·ªãch v·ª• kh√°ch s·∫°n"
                        style={{ maxWidth: "100%", height: "auto" }}
                    />
                    <ul>
                        {serviceData.highlights.map((item, index) => (
                            <li key={index}>‚úÖ {item}</li>
                        ))}
                    </ul>
                    {serviceData.details.map((text, index) => (
                        <p key={index}>‚úî {text}</p>
                    ))}
                </Col>
            </Row>

            {/* Gi·ªõi thi·ªáu */}
            <Row className="mt-4">
                <Col md={8}>
                    <h3 className="fw-bold">Gi·ªõi thi·ªáu</h3>
                    <img
                        src={images}
                        alt="Kh√°m ph√° d·ªãch v·ª• kh√°ch s·∫°n"
                        style={{ maxWidth: "100%", height: "auto" }}
                    />
                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam.
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam.</p>
                </Col>
            </Row>

            {/* ƒê√°nh gi√° */}
            <Row className="mt-4" style={styles.feedback}>
                <Col>
                    <div style={styles.titleFeedback}>
                        <h3 className="fw-bold">ƒê√°nh gi√° ({serviceData.reviewsData.totalReviews})</h3>
                    </div>
                    <img
                        src={images}
                        alt="Kh√°m ph√° d·ªãch v·ª• kh√°ch s·∫°n"
                        style={{ maxWidth: "100%", height: "auto" }}
                    />
                    <Card className="mt-3 p-3" style={styles.ratingContainer}>
                        <Card.Body style={styles.ratingCardBody}>
                            {/* Hi·ªÉn th·ªã ƒëi·ªÉm trung b√¨nh v·ªõi bi·ªÉu t∆∞·ª£ng sao */}
                            <div className="d-flex flex-column align-items-center">
                                <h2 className="fw-bold text-warning">{serviceData.reviewsData.averageRating.toFixed(2)}</h2>
                                <div>
                                    {[...Array(5)].map((_, i) => (
                                        <span key={i} className={i < Math.round(serviceData.reviewsData.averageRating) ? "text-warning" : "text-secondary"} style={{ fontSize: "1.5rem" }}>
                                            ‚≠ê
                                        </span>
                                    ))}
                                </div>
                                <p className="text-muted">({serviceData.reviewsData.totalReviews} ƒë√°nh gi√°)</p>
                            </div>

                            {/* Hi·ªÉn th·ªã chi ti·∫øt s·ªë l∆∞·ª£ng ƒë√°nh gi√° t·ª´ng sao */}
                            <div className="w-100">
                                {serviceData.reviewsData.starRatings.map((count, i) => (
                                    <div key={i} className="d-flex align-items-center">
                                        <span className="text-primary">{i + 1} sao</span>
                                        <ProgressBar
                                            now={(count / serviceData.reviewsData.totalReviews) * 100}
                                            className="flex-grow-1 mx-2"
                                            variant={count > 0 ? "warning" : "light"}
                                            style={{ height: "8px", borderRadius: "10px" }}
                                        />
                                        <span className="text-muted">{count} ƒë√°nh gi√°</span>
                                    </div>
                                ))}
                            </div>
                        </Card.Body>
                    </Card>
                    {serviceData.reviewsData.reviews.map((review, index) => (
                        <Card className="mt-3" key={index} style={styles.reviewCard}>
                            <Card.Body style={styles.reviewCardBody}>
                                <h5>{review.name}</h5>
                                {[...Array(review.rating)].map((_, i) => (
                                    <span key={i} className="text-warning">‚≠ê</span>
                                ))}
                                <p>{review.comment}</p>
                                <small className="text-muted">{review.date}</small>
                            </Card.Body>
                        </Card>
                    ))}
                </Col>
            </Row>
        </Container>
    );
};

export default TestServiceDetail;